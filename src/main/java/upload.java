
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JTable;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Asus
 */
public class upload extends javax.swing.JFrame {

    /**
     * Creates new form upload
     */
    
    //=========================Prabhahsi's variables========================
    //======================================================================
    
    int Csval = 0;
    int Wkw = 1;
    int Nkw = 0;
    int Wid = 1;
    int Nid = 0;
    int Wop = 1;
    int Nop =0;
    int Wnv = 1 ;
    int Nnv =0;
    int Wsl =1;
    int Nsl =0;
    
    //=========================Prabhahsi's variables ends here==========================
    //==================================================================================
    
    public upload() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        prabhaLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1110, 800));
        setSize(new java.awt.Dimension(1110, 800));

        jLabel1.setBackground(new java.awt.Color(153, 153, 153));
        jLabel1.setFont(new java.awt.Font("Nirmala UI", 1, 36)); // NOI18N
        jLabel1.setText("Complexity Measuring Tool");

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton3.setBackground(new java.awt.Color(0, 153, 102));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton3.setText("UPLOAD");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 102, 102));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton4.setText("CLEAR");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 107, 179));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton1.setText("SIZE");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(0, 107, 179));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton2.setText("VARIABLE");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton5.setBackground(new java.awt.Color(0, 107, 179));
        jButton5.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton5.setText("METHODS");

        jButton6.setBackground(new java.awt.Color(0, 107, 179));
        jButton6.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton6.setText("INHERITANCE");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(0, 107, 179));
        jButton7.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton7.setText("COUPLING");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton8.setBackground(new java.awt.Color(0, 107, 179));
        jButton8.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton8.setText("FINAL");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setBackground(new java.awt.Color(0, 107, 179));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton9.setText("CONTROL STRUCTURE");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(216, 216, 216)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 658, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(40, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(334, 334, 334))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prabhaLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(476, 476, 476))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(prabhaLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(118, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        //================================================================================
        //===============================Prabhashi's code start  here=====================
        
        //This is a library for choose the file
        JFileChooser chooser = new JFileChooser();
        //open the file folder
        chooser.showOpenDialog(null);
        //get the selected file into a variable
        File f = chooser.getSelectedFile();
        //get the file path to a variable
        String filename = f.getAbsolutePath();
       
        try {
            //Read the file from the file path
            FileReader reader = new FileReader(filename);
            //buffer reader 
            BufferedReader br = new BufferedReader(reader);
            //write the file into our text area
            jTextArea1.read(br, null);
            br.close();
            jTextArea1.requestFocus();
            
        } catch (FileNotFoundException ex) {
            Logger.getLogger(upload.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(upload.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        //=====================================Prabhahsi's code ends here==================================
        //=================================================================================================
        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        //--------------------------------------------------ControlStructure----------------------------------------------------------
        ControlStruc up = new ControlStruc();
        up.setVisible(true);
        
//        // Load table data
//
//        String fullCode6 = jTextArea1.getText();
//
//        if (fullCode6.isEmpty()) {
//
//            JFrame f = new JFrame();
//            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
//        } else {
//
//            String[] lines = fullCode6.split("\n");
//            int lineCount = lines.length;
//            //System.out.println(result);
//            System.out.println(lineCount);
//
//            for (int i = 0; i < lineCount; i++) {
//
//                String words[] = lines[i].split("\\s");
//
//                int count = 0;  //variable to get the total complexity
//
//                //int count_variable = 0;
////                String codeFirst = fullCode6.replaceAll("\".*\"", ""); //remove double quotes from the code
////                String codeNext = codeFirst.replaceAll("\\'.*?\\'", ""); //remove single quotes from the code
////                String codeFinal = codeNext.replaceAll("(?:/\\*(?:[^*]|(?:\\*+[^*/]))*\\*+/)|(?://.*)", ""); //remove all single and multiple comments
//                //System.out.println(codeFinal);
////        ArrayList<SingleLine> statementList = new ArrayList<SingleLine>();
//                //      for (SingleLine singleLine : statementList) {
//                //count if conditions, logical and bitwise operators
//                CountConditions getIf = new CountConditions(fullCode6, "if", 1);
//                count = count + getIf.getCount();
//
//                //System.out.println("No. of if Conditional Control Structures with logical and/or bitwise operators: " + countif);
//                //count while conditions
//                CountConditions getWhile = new CountConditions(fullCode6, "while", 2);
//                count = count + getWhile.getCount();
//
//                //System.out.println("No. of while Iterative Control Structures with logical and/or bitwise operators: " + countwhile);
//                //count for conditions
//                CountConditions getFor = new CountConditions(fullCode6, "for", 2);
//                count = count + getFor.getCountForCatch();
//
//                //System.out.println("No. of for Iterative Control Structures with logical and/or bitwise operators: " + countfor);
//                //count catch conditions
//                CountConditions getCatch = new CountConditions(fullCode6, "catch", 1);
//                count = count + getCatch.getCountForCatch();
//
//                //System.out.println("No. of catch statements: " + countcatch);
//                //count case blocks in switch
//                String[] wordsSwitch = fullCode6.split("switch"); //split from switch
//
//                //get rest words one by one
//                for (int j = 0; j < wordsSwitch.length; j++) {
//
//                    wordsSwitch[j] = wordsSwitch[j] + "zzz"; //add dummy value to get rid from IndexOutOfBounds exception
//
//                    //                System.out.println(wordsSwitch[j]);
//                    //get switch statements which only have brackets next to it
//                    if (wordsSwitch[j].charAt(0) == '(' || wordsSwitch[j].charAt(1) == '(') {
//
//                        //get content inside curly brackets using a stack
//                        CheckInsideBrackets brackets = new CheckInsideBrackets(wordsSwitch[j]);
//                        String getSwitch = brackets.getCurly();
//
//                        //System.out.println(getSwitch + "SWITCH");
//                        //count case blocks
//                        Pattern pSwitch = Pattern.compile("case");
//                        Matcher mSwitch = pSwitch.matcher(getSwitch);
//
//                        while (mSwitch.find()) {
//                            ++count; //increment count
//                        }
//
//                    }
//                }
//
//                //System.out.println("No of swith cases : " + countswitch);
//                //String variablePat = "\\bfloat+([\\s][_$a-zA-Z])\\w+|\\bdouble+([\\s][_$a-zA-Z])\\w+|\\bint+([\\s][_$a-zA-Z])\\w+";
////                    int line_i_length=lines[i].length();
////                Pattern pat = Pattern.compile(variablePat);
////                Matcher patternMatcher = pat.matcher(lines[i]);
////                count_variable = 0;
////                while (patternMatcher.find()) {
////                    count_variable++;
////                    System.out.println("found: " + count_variable + " : "
////                            + patternMatcher.start() + " - " + patternMatcher.end());
////                }
//                Object[] row = {i, lines[i], 0};
//
//                //DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
//
//               // model.addRow(row);
//            }
//
//        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        //--------------------------------------------------Coupling----------------------------------------------------------
        Coupling up = new Coupling();
        up.setVisible(true);
        
        // Load table data

        String fullCode6 = jTextArea1.getText();

        if (fullCode6.isEmpty()) {

            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        }
        else{}
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        Inheritance up = new Inheritance();
        up.setVisible(true);
        
        // Load table data

        String fullCode6 = jTextArea1.getText();

        if (fullCode6.isEmpty()) {

            JFrame f = new JFrame();
            JOptionPane.showMessageDialog(f, "You should import a Text File for the text area !");
        }
        else{}// TODO add your handling code here:
        //Testing
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    
        //Get the text into a variable
        String maintext = jTextArea1.getText().toString();
        
        //Get the length of the text ( count the words in the text area )=============This was not use======
        //int count = maintext.split(" ").length;
        
        //Scanner to scan the text
        Scanner scanText = new Scanner(maintext);

        //variables
        String st;
        int totother = 0;
        
        //nextLine means it will read the text line by line.
        while((st = scanText.nextLine()) != null){
            String[] texx = st.split(" ");

            for (int i=0; i < texx.length; i++){
                // this if statement for check Nkw is in the code. ==================This is correct======================
                if ( texx[i].equals("class") || texx[i].equals("public") || texx[i].equals("void") || texx[i].equals("true") || texx[i].equals("else")
                        || texx[i].equals("default") || texx[i].equals("return")|| texx[i].equals("null") || texx[i].equals("break") || texx[i].equals("static") || texx[i].equals("this")) {
                    Nkw = Nkw + 1;
                }
                //This has only checking varibale type s are there or not ================This one mostly correct=======================
                else if ( texx[i].contains("int")|| texx[i].contains("float") || texx[i].contains("double") || texx[i].contains("char") || texx[i].contains("main") 
                        || texx[i].contains("class") || texx[i].contains("args") || texx[i].contains("array") || texx[i].contains("Linked List") 
                        || texx[i].contains("Stack") || texx[i].contains("Queue") || texx[i].contains("System") || texx[i].contains("out") || texx[i].contains("println") 
                        || texx[i].contains("print") || texx[i].equals("i") || texx[i].contains("j") || texx[i].equals("counter")     ) {
                   Nid = Nid + 1;
                }else if ( texx[i].equals("+") || texx[i].equals("-") || texx[i].equals("*") || texx[i].equals("/") || texx[i].equals("%") || texx[i].contains("&&")
                        || texx[i].equals("||") || texx[i].equals("<")|| texx[i].equals(">") || texx[i].contains("<=") || texx[i].contains(">=")
                        || texx[i].contains("==") || texx[i].equals("=")|| texx[i].contains("++") || texx[i].contains("--") || texx[i].contains(".")) {
                   Nop = Nop + 1;
                    //System.out.println("sysmbol : " + texx[i]);
                }else if ( texx[i].equals("")  || texx[i].equals("Hi")|| texx[i].contains("")  ) {
                   Nsl = Nsl + 1;
                   //System.out.println("sysmbol : " + texx[i]);
                }else {
                   totother = totother + 1;
                }
            }  
            
            
            //Variable to count CS
            Csval = Nkw + Nid + Nop + Nsl;

            //Variable for convert Nid integer valuue to String
            String Nnid = Integer.toString(Csval);
            
            //String value of the Nid will display in the interface of Upload.java.
            prabhaLabel.setText(Nnid);

//            This is for readt he array.=========Not in use========== This will help you============ 
//            for(String ss: texx){
//                System.out.print(ss +" ");
//                
//               
//            }
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new upload().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel prabhaLabel;
    // End of variables declaration//GEN-END:variables
}


